// GENERATED BY EPSILON ----------------------------------------------------
try {
	var game = new Game();
	
	game.mode = "PRODUCTION"
	
    [% var levelIndex := 0; %]
    [%    for (level in game.levels){ %]
    
    game.levels[[%=levelIndex%]] = new Level(game, "level_[%=levelIndex + 1%]",
            "[%=level.name%]");
    game.levels[[%=levelIndex%]].levelCase = new Case(game, game.levels[[%=levelIndex%]], "[[%=level.levelCase.name%]",
            "[%=level.levelCase.description%]"); 
       
	    [%for (draggableItem in level.levelCase.draggableItems){ %]
	       game.levels[[%=levelIndex%]].levelCase.addDraggableItem("[%=draggableItem%]");
	    [%    } %]
	    
	    [% var i := 1; %]
	    [%for (object in level.objectives){ %]
	    var objectiveLevel[%=i%] = new Objective(game, game.levels[[%=levelIndex%]], "[%=object.name%]",
            "[%=object.description%]");
       game.levels[[%=levelIndex%]].addObjective(objectiveLevel[%=i%]);
                [% i := i + 1; %]
        [%    } %]
	      
	game.levels[[%=levelIndex%]].initialize = function() {

        this.objects.length = 0;
        document.getElementById("Title").innerHTML = this.levelName;
        document.getElementById("Instruction").innerHTML = this.levelCase.description;

        var div = document.getElementById("DraggableItems");
        while (div.hasChildNodes()) {
            div.removeChild(div.lastChild);
        }
        for (var i = 0; i < this.levelCase.draggableItems.length; i++) {
            var draggableItem = this.levelCase.draggableItems[i];
            var newSpan = document.createElement("span");

            newSpan.className = "DraggableCaseItem";
            newSpan.id = draggableItem.identity;
            newSpan.innerHTML = draggableItem.text;
            newSpan.style.color = "#0066cc";
            // newSpan.style.backgroundColor= "#f5f5f5";
            newSpan.style.borderWidth = "thin";
            newSpan.style.borderStyle = "solid";
            newSpan.style.borderColor = "black";
            newSpan.style.paddingLeft = "1%";
            newSpan.style.paddingRight = "1%";
            newSpan.draggable = "true";
            newSpan.cursor = "grab";
            newSpan.style.zIndex = "9";
            newSpan.style.marginRight = "1%";
            newSpan.style.textAlign = "center";
            div.appendChild(newSpan);
        }

        $('.DraggableCaseItem').draggable({
            opacity : 0.7,
            helper : "clone",
            start : function(event, ui) {
                draggedId = $(event.target).attr('id');
            }
        });

        var ol = document.getElementById("Objective");
        ol.style.color = "#000000";
        while (ol.hasChildNodes()) {
            ol.removeChild(ol.lastChild);
        }
        for (var i = 0; i < game.levels[game.currentLevel].objectives.length; i++) {
            var li = document.createElement("li");
            li.style.color = "#000000";
            li.id = game.levels[game.currentLevel].objectives[i].objectiveName;
            var text = document
                    .createTextNode(game.levels[game.currentLevel].objectives[i].description);
            li.appendChild(text);
            ol.appendChild(li);
        }
        resetTime();
        startTime("TimeValue");

    }.bind(game.levels[[%=levelIndex%]]);    
	    
	    [%    levelIndex := levelIndex + 1; %]
    [%    } %]
   
	// ---Excute Game---------------------------------------------------------
	game.run();
} catch (error) {
	alert(error.message);
}
